services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: medical_device_postgres
    environment:
      POSTGRES_DB: medical_device
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d/
    networks:
      - medical_device_network

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: medical_device_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@medical-device.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - medical_device_network

  # Backend API Server
  backend:
    build: ./backend
    container_name: medical_device_backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=medical_device
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - medical_device_network

  # Frontend Next.js Application
  frontend:
    build: ./frontend
    container_name: medical_device_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - medical_device_network

volumes:
  postgres_data:


networks:
  medical_device_network:
    driver: bridge
